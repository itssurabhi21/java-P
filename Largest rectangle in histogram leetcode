//Largest rectangle in histogram
https://leetcode.com/problems/largest-rectangle-in-histogram/

class Solution {
    public int[] nextSmallRight(int arr[])
    {
        int n = arr.length;
        Stack<Integer> st = new Stack<>();
        int ans[] = new int[arr.length];
        ans[n-1] = n;
        st.push(n-1);
        for(int i=n-2;i>=0;i--)
        {
            int currEl = arr[i];
            while(!st.isEmpty() && arr[st.peek()]>=currEl)
            {
                st.pop();
            }
            if(st.isEmpty()) ans[i] = n;
            else
            {
                ans[i] = st.peek();
            }
            st.push(i);
        }
        
        return ans;

    }

    public int[] nextSmallLeft(int arr[])
    {
        int n = arr.length;
        Stack<Integer> st = new Stack<>();
        int ans[] = new int[arr.length];
        ans[0] = -1;
        st.push(0);
        for(int i=1;i<n;i++)
        {
            int currEl = arr[i];
            while(!st.isEmpty() && arr[st.peek()]>=currEl)
            {
                st.pop();
            }
            if(st.isEmpty()) ans[i] = -1;
            else
            {
                ans[i] = st.peek();
            }
            st.push(i);
        }
        
        
        return ans;

    }
    public int largestRectangleArea(int[] heights) 
    {
        int nextRS[] = nextSmallRight(heights);
        int nextLS[] = nextSmallLeft(heights);
        int max=0;
        for(int i=0;i<heights.length;i++)
        {
            int width = nextRS[i] - nextLS[i] -1;
            int area = width * heights[i];
            max = Math.max(max,area);
        }
        return max;
    }
}
