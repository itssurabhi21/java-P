//Reorder List - https://leetcode.com/problems/reorder-list/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode middle(ListNode head)
    {
        
        ListNode slow = head,fast = head.next;
        while(fast!=null && fast.next!=null)
        {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

    public ListNode reverse(ListNode head)
    {
        
        ListNode curr = head,next=head,prev = null;
        while(curr!=null)
        {
            next = curr.next;
            curr.next = prev;
            prev =curr;
            curr = next;
        }
        return prev;
    }
    public void reorderList(ListNode head) 
    {
        ListNode mid = middle(head);
        ListNode nextMid = mid.next;
        mid.next=null;
        ListNode secHalf = reverse(nextMid);
        ListNode LH = head, RH = secHalf;
        ListNode nextL,nextR;
        while(LH!=null && RH!=null)
        {
            nextL = LH.next;
            nextR = RH.next;

            LH.next = RH;
            RH.next = nextL;

            LH = nextL;
            RH = nextR;
             
        }

    }
}
